@model OrderVM

<h2>
    Редактирай поръчка № @Model.Id
</h2>

<div class="row">
    <div class="col-md-12">
        <form asp-area="" asp-controller="Orders" asp-action="Edit">
            <div class="form-horizontal">
                <br />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <br />
                <label>
                    Информация
                </label>
                <dl class="dl-horizontal">
                    <dt>
                        <label>
                            Регистрирана на
                        </label>
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Created)
                    </dd>
                    <dt>
                        <label>
                            Променена на
                        </label>
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Updated)
                    </dd>
                    <dt>
                        <label>
                            Обща сума
                        </label>
                    </dt>
                    <dd>
                        @(Model.OrderItems.Select(p => p.Quantity * p.Price).Sum()) лв.
                    </dd>
                    <dt>
                        <label>
                            Статус
                        </label>
                    </dt>
                    <dd>
                        <select class="form-control" asp-for="Status" asp-items="Html.GetEnumSelectList<OrderStatus>()"></select>
                    </dd>
                </dl>
                <label>
                    Доставка
                </label>
                <dl class="dl-horizontal">
                    <dt>
                        Имена
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.Names, new { @class = "form-control" })
                    </dd>
                    <dt>
                        Имейл
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    </dd>
                    <dt>
                        Телефон
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
                    </dd>
                    <dt>
                        Адрес
                    </dt>
                    <dd class="">
                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                    </dd>
                    <dt>
                        Град / Село
                    </dt>
                    <dd class="">
                        @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                    </dd>
                </dl>
                <label>
                    Фактура
                </label>
                <dl class="dl-horizontal">
                    <dt>
                        Фирма
                    </dt>
                    <dd>
                        @{
                            var companyName = Model.CompanyName == "NULL" ? "" : Model.CompanyName;
                        }
                        <input type="text" class="form-control" value="@companyName" name="CompanyName" />
                    </dd>
                    <dt>
                        ЕИК Бустат
                    </dt>
                    <dd>
                        @{
                            var companyEik = Model.CompanyEIK == "NULL" ? "" : Model.CompanyEIK;
                        }
                        <input type="text" class="form-control" value="@companyEik" name="CompanyEIK" />
                    </dd>
                </dl>

                <label>
                    Продукти
                </label>
                <div class="container order-items-container">
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-5">
                            Продукт
                        </div>
                        <div class="col-md-1">
                            Цена
                        </div>
                        <div class="col-md-1">
                            Брой
                        </div>
                        <div class="col-md-1">
                            Общо
                        </div>
                        <div class="col-md-1">
                        </div>
                    </div>

                    <input asp-for="Id" type="hidden" />
                    <script>window.ORDERITEMS = [];</script>
                    @foreach (var orderItem in Model.OrderItems)
                    {
                        <script>
                            window.ORDERITEMS.push({
                                    "orderItemId": @Html.Raw(orderItem.Id),
                                    "productId": @Html.Raw(orderItem.ProductId),
                                    "name": "@Html.Raw(orderItem.Name)",
                                    "quantity": @Html.Raw(orderItem.Quantity),
                                    "price": @Html.Raw(orderItem.Price),
                                    "total": @Html.Raw(orderItem.Quantity * orderItem.Price),
                                    "image": "@Html.Raw(orderItem.ImageUrl)"
                            });
                        </script>
                    }
                </div>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-9 col-md-1">
                        <input type="submit" value="Запази" class="btn btn-default save-changes" />
                    </div>
                </div>

                <div class="col-md-12">
                    <button type="button" class="btn btn-success btn-new-order-item col-md-offset-5">
                        <span class="glyphicon glyphicon-plus"></span>
                        Нов продукт
                    </button>
                </div>
                <br />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Назад към списъка</a>
</div>

@* add new orderItem row *@
<div class="row order-item-row add-new-order-item" style="display: none;">
    <input name="OrderItems[0].Id" type="hidden" class="order-item-id" value="0" />
    <input name="OrderItems[0].ProductId" type="hidden" class="product-id" value="0" />
    <div class="col-md-1">
        <img src="~/imgs/no_pic.jpg" style="height: 70px; width: 70px;" />
    </div>
    <div class="col-md-5">
        <select name="OrderItems[0].Name" class="form-control order-item-name" placeholder="Име на продукт" >
            <option value="3620194" selected="selected">
                Име на продукт
            </option>
        </select>
    </div>
    <div class="col-md-1">
        <label name="OrderItems[0].Price" class="order-item-price">
            0
        </label>
        <span>
            лв.
        </span>
    </div>
    <div class="col-md-1">
        <input name="OrderItems[0].Quantity" value="1" class="order-item-quantity form-control" />
    </div>
    <div class="col-md-1">
        <label class="order-item-total">
            0
        </label>
        <span>
            лв.
        </span>
    </div>
    <div class="col-md-1">
        <button type="button" class="btn btn-danger remove-order-item">
            Премахни
        </button>
    </div>
    <br />
    <br />
</div>

@section Scripts{
    <!-- Select2 -->
    <script src="~/vendors/select2/dist/js/select2.min.js"></script>

    <script>

        var url = "/../Products/AvaiableProducts";
        function initiateSelect2(jqElement) {
            jqElement.select2({
                width: '100%',
                ajax: {
                    url: url,
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            query: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    },                    
                    cache: true,
                },
                tags: true,
                createTag: function (params) {
                    return {
                        id: params.term,
                        text: params.term,
                        newOption: true
                    }
                },
                escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                minimumInputLength: 1,
                templateResult: function (data) {
                    let $result = $("<span></span>");

                    $result.text(data.text);

                    if (data.newOption) {
                        $result.append(" <em>(създай)</em>");
                    }

                    return $result;
                },
                //templateSelection: formatRepoSelection // omitted for brevity, see the source of this page
            });
        }

        function addOrderItemRow(orderItemId, productId, name, quantity, price, total, image) {
            let $row = $('.add-new-order-item').first().clone();
            $row.removeClass('add-new-order-item');

            $row.find(".remove-order-item").on("click", (e) => {
                $(e.currentTarget).parent().parent().remove();
            });
            
            initiateSelect2($row.find('.order-item-name'));

            if (name) {
                var $option = $("<option> </option>").val(name).text(name).attr("data-select2-tag", true);
                $("<option selected></option>").val(productId).text(name).append($option);
                $row.find("select").first().html($option);
            }

            if (orderItemId) $row.find('.order-item-id').val(orderItemId);

            if (productId) $row.find('.product-id').val(productId);

            if (quantity) $row.find('.order-item-quantity').val(quantity);

            if (price) $row.find('.order-item-price').html(price);

            if (total) $row.find('.order-item-total').html(total);

            if (image) $row.find('img').attr("src", image);

            $row.appendTo('.order-items-container').first();
            $row.toggle();
        }

        function changeIndeces() {
            $.each($(".order-item-row"), (index, row) => {
                let pattern = /[\d+]/g;
                let $row = $(row);
                let $productId = $row.find('.product-id');
                let $orderItemId = $row.find('.order-item-id');
                let $orderItemName = $row.find('.order-item-name');
                let $orderItemPrice = $row.find('.order-item-price');
                let $orderItemQuantity = $row.find('.order-item-quantity');
                
                let $orderItemIdVal = $orderItemId.attr('name');
                $orderItemId.attr('name', $orderItemIdVal.replace(pattern, index));

                let $productIdVal = $productId.attr('name');
                $productId.attr('name', $productIdVal.replace(pattern, index));

                let $orderItemNameVal = $orderItemName.attr('name');
                $orderItemName.attr('name', $orderItemNameVal.replace(pattern, index));

                let $orderItemPriceVal = $orderItemPrice.attr('name');
                $orderItemPrice.attr('name', $orderItemPriceVal.replace(pattern, index));

                let $orderItemQuantityVal = $orderItemQuantity.attr('name');
                $orderItemQuantity.attr('name', $orderItemQuantityVal.replace(pattern, index));
            });
        }

        function loadEventsOnOrderItemRow() {
            $(".order-item-name").on("change", (event) => {
                let productId = $(event.target).select2('data')[0].id;
                $(event.target).parent().parent().find(".product-id").val(productId);

                let imageUrl = $(event.target).select2('data')[0].imageUrl;
                if (imageUrl) {
                    $(event.target).parent().parent().find("img").attr("src", imageUrl).trigger("change");
                } else {
                    $(event.target).parent().parent().find("img").attr("src", "/imgs/no_pic.jpg").trigger("change");
                }

                let price = $(event.target).select2('data')[0].price;
                $(event.target).parent().parent().find(".order-item-price").text(price);
                $(event.target).parent().parent().find(".order-item-quantity").val(1);
                $(event.target).parent().parent().find(".order-item-total").text(price);

                let name = $(event.target).select2('data')[0].text;
                var $option = $("<option> </option>").val(name).text(name).attr("data-select2-tag", true);
                $("<option selected></option>").val(productId).text(name).append($option);
                $(event.target).html($option);                
            });

            $(".remove-order-item").on("click", (event) => {
                $(event.target).parent().parent().html("");
            }); 

            $(".order-item-quantity").on("change", (event) => { 
                var quantity = $(event.target).val();
                var price = $(event.target).parent().parent().find(".order-item-price").text();
                $(event.target).parent().parent().find(".order-item-total").text(quantity * price);
            });
        }

        $('.order-item-row').ready(() => { 
            loadEventsOnOrderItemRow(); 
        });
                
        $(".btn-new-order-item").on("click", () => {
            addOrderItemRow();
            loadEventsOnOrderItemRow();
        });

        $(".save-changes").on("click", () => {
            changeIndeces();
        });
        
        // initialize orderItems
        if (ORDERITEMS && ORDERITEMS.length > 0) {
            for (let ord of ORDERITEMS) {
                addOrderItemRow(ord.orderItemId, ord.productId, ord.name, ord.quantity, ord.price, ord.total, ord.image);
            }
        } else {
            addProductRow();
        }
    </script>
}
