@model OrderVM

<h2>
    Редактирай поръчка № @Model.Id
</h2>

<div class="row">
    <div class="col-md-12">
        <form asp-action="Create">
            <div class="form-horizontal">
                <br />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <br />
                <label>
                    Информация
                </label>
                <dl class="dl-horizontal">
                    <dt>
                        <label>
                            Регистрирана на
                        </label>
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Created)
                    </dd>
                    <dt>
                        <label>
                            Обща сума
                        </label>
                    </dt>
                    <dd>
                        @(Model.OrderItems.Select(p => p.Quantity * p.Price).Sum()) лв.
                    </dd>
                    <dt>
                        <label>
                            Статус
                        </label>
                    </dt>
                    <dd>
                        <select class="form-control" asp-for="Status" asp-items="Html.GetEnumSelectList<OrderStatus>()"></select>
                    </dd>
                </dl>
                <label>
                    Доставка
                </label>
                <dl class="dl-horizontal">
                    <dt>
                        Имена
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.Names, new { @class = "form-control" })
                    </dd>
                    <dt>
                        Телефон
                    </dt>
                    <dd>
                        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
                    </dd>
                    <dt>
                        Адрес
                    </dt>
                    <dd class="">
                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                    </dd>
                    <dt>
                        Град / Село
                    </dt>
                    <dd class="">
                        @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                    </dd>
                </dl>
                <label>
                    Фактура
                </label>
                <dl class="dl-horizontal">
                    <dt>
                        Фирма
                    </dt>
                    <dd>
                        @{
                            var companyName = Model.CompanyName == "NULL" ? "Няма" : Model.CompanyName;
                        }
                        <input type="text" class="form-control" value="@companyName" name="CompanyName" />
                    </dd>
                    <dt>
                        ЕИК Бустат
                    </dt>
                    <dd>
                        @{
                            var companyEik = Model.CompanyEIK == "NULL" ? "Няма" : Model.CompanyEIK;
                        }
                        <input type="text" class="form-control" value="@companyName" name="CompanyEIK" />
                    </dd>
                </dl>

                <label>
                    Продукти
                </label>
                <div class="container order-items-container">
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-5">
                            Продукт
                        </div>
                        <div class="col-md-1">
                            Цена
                        </div>
                        <div class="col-md-1">
                            Брой
                        </div>
                        <div class="col-md-1">
                            Общо
                        </div>
                        <div class="col-md-1">
                        </div>
                    </div>

                    <script>window.ORDERITEMS = [];</script>
                    @foreach (var orderItem in Model.OrderItems)
                    {
                        <script>
                            window.ORDERITEMS.push({
                                    "name": "@Html.Raw(orderItem.Name)",
                                    "quantity": @Html.Raw(orderItem.Quantity),
                                    "price": @Html.Raw(orderItem.Price),
                                    "total": @Html.Raw(orderItem.Quantity * orderItem.Price),
                                    "image": "@Html.Raw(orderItem.ImageUrl)"
                            });
                            alert("@Html.Raw(orderItem.ImageUrl)");
                        </script>

                        @*<div class="row order-item-row">
                            <input type="hidden" class="product-id" value="" />
                            <div class="col-md-1">
                                <img src="@orderItem.ImageUrl" style="height: 70px; width: 70px;" />
                            </div>
                            <div class="col-md-5">
                                <select name="OrderItems[0].Name" class="product-name"></select>
                            </div>
                            <div class="col-md-1">
                                @orderItem.Price лв.
                            </div>
                            <div class="col-md-1">
                                <input asp-for="@orderItem.Quantity" class="form-control" />
                            </div>
                            <div class="col-md-1">
                                @(orderItem.Price * orderItem.Quantity) лв.
                            </div>
                            <div class="col-md-1">
                                <input type="hidden" value="@orderItem.ProductId" class="product-id" />
                                <button type="button" class="btn btn-danger remove-order-item">
                                    Премахни
                                </button>
                            </div>
                        </div>*@
                    }
                </div>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-9 col-md-1">
                        <input type="submit" value="Запази" class="btn btn-default" />
                    </div>
                </div>

                <div class="col-md-12">
                    <button type="button" class="btn btn-success btn-new-order-item col-md-offset-5">
                        <span class="glyphicon glyphicon-plus"></span>
                        Нов продукт
                    </button>
                </div>
                <br />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Назад към списъка</a>
</div>

@* add new orderItem row *@
<div class="row add-new-order-item" style="display: none;">
    <input  name="OrderItems[0].ProductId" type="hidden" class="product-id" value="" />
    <div class="col-md-1">
        <img src="~/imgs/no_pic.jpg" style="height: 70px; width: 70px;" />
    </div>
    <div class="col-md-5">
        <select name="OrderItems[0].Name" class="product-name"></select>
    </div>
    <div class="col-md-1">
        <label name="OrderItems[0].Price" class="order-item-price">
        </label>
    </div>
    <div class="col-md-1">
        <input name="OrderItems[0].Quantity" value="1" class="product-quantity form-control" />
    </div>
    <div class="col-md-1">
        <label class="order-item-total">
        </label>
    </div>
    <div class="col-md-1">
        <button type="button" class="btn btn-danger remove-order-item">
            Премахни
        </button>
    </div>
    <br />
    <br />
</div>

@section Scripts{
    <!-- Select2 -->
    <script src="~/vendors/select2/dist/js/select2.min.js"></script>

    <script>

        document.AVAIABLE_PRODUCTS = [];
        function getAvaiableProductNames() {
            let promise = new Promise((resolve, reject) => {
                if (document.AVAIABLE_PRODUCTS && document.AVAIABLE_PRODUCTS.length > 0) {
                    resolve(document.AVAIABLE_PRODUCTS);
                }

                let url = "/../Products/AvaiableProducts";
                $.get(url, function (data, status) {
                    document.AVAIABLE_PRODUCTS = data;
                    resolve(document.AVAIABLE_PRODUCTS);
                });
            });

            return promise;
        }

        getAvaiableProductNames().then((data) => {
            let products = $(".product-name");
            for (let product of products) {
                initiateSelect2($(product), data, 'Име на продукт');
            }

            let productIds = $(".product-id");
            for (let id of productIds) {
                $(id).select2({ data: data });
            }
        });

        function initiateSelect2(jqElement, data, placeholder = '') {
            jqElement.select2({
                width: '100%',
                data: data,
                placeholder: placeholder,

                // new item stuff
                tags: true,
                createTag: function (params) {
                    return {
                        id: params.term,
                        text: params.term,
                        newOption: true
                    }
                },
                templateResult: function (data) {
                    let $result = $("<span></span>");

                    $result.text(data.text);

                    if (data.newOption) {
                        $result.append(" <em>(създай)</em>");
                    }

                    return $result;
                }
            });
        }


        //////////////////////////////////////////////////
        function addOrderItemRow(name, quantity, price, total, image) {
            let $row = $('.add-new-order-item').first().clone();
            $row.removeClass('add-new-order-item');

            $row.find(".remove-order-item").on("click", (e) => {
                $(e.currentTarget).parent().parent().remove();
            });

            getAvaiableProductNames().then((products) => {
                initiateSelect2($row.find('.product-name'), ingredients, 'Име на продукт');
                if (name) $row.find('.product-name').val(name).trigger('change');
            });
            
            if (quantity) $row.find('.product-quantity').val(quantity);

            if (price) $row.find('.order-item-price').html(price);

            if (total) $row.find('.order-item-total').html(total);

            if (image) $row.find('img').attr("src", image);

            $row.appendTo('.order-items-container').first();
            $row.toggle();
        }
        ///////////////////////////////////////////////////////


        $(".product-name").on("change", (event) => {
            var id = $(event.target).select2('data')[0].id;
            let $productIdHidden = $(event.target).parent().children(".product-id");
            $productIdHidden.val(id);
        });

        $(".remove-order-item").on("click", (event) => {
            let $productIdHidden = $(event.target).parent().children(".product-id").val();
            $(event.target).parent().parent().html("");
            $.post("RemoveItemFromBasket", { productId: $productIdHidden });
        });

        $(".btn-new-order-item").on("click", () => {
            addOrderItemRow();
        });

        var $companyInfo = $(".company-info");
        var $companyIngfoCheckbox = $(".checkbox-company-info");
        $companyIngfoCheckbox.on("change", () => {
            if ($companyIngfoCheckbox.val() == "off") {
                $companyIngfoCheckbox.val("on");
                $companyInfo.show();
            } else {
                $companyIngfoCheckbox.val("off");
                $companyInfo.hide();
            }
        });

        var $companyName = $(".company-name");
        var $companyEik = $(".company-eik");
        var $btnSubmitOrder = $(".submit-order").on("click", () => {
            if ($companyName.val() == "" || $companyIngfoCheckbox.val() == "off") {
                $companyName.val("NULL");
            }

            if ($companyEik.val() == "" || $companyIngfoCheckbox.val() == "off") {
                $companyEik.val("NULL");
            }
        });

        // initialize orderItems
        if (ORDERITEMS && ORDERITEMS.length > 0) {
            for (let ord of ORDERITEMS) {
                addOrderItemRow(ord.name, ord.quantity, ord.price, ord.total, ord.image);
            }
        } else {
            addProductRow();
        }
    </script>
}
